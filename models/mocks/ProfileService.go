// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	"github.com/google/uuid"
	"github.com/onattech/invest/models"
	mock "github.com/stretchr/testify/mock"
)

// ProfileService is an autogenerated mock type for the ProfileService type
type ProfileService struct {
	mock.Mock
}

// GetProfileByID provides a mock function with given fields: c, userID
func (_m *ProfileService) GetProfileByID(c context.Context, userID uuid.UUID) (*models.Profile, error) {
	ret := _m.Called(c, userID)

	var r0 *models.Profile
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) *models.Profile); ok {
		r0 = rf(c, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Profile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(c, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewProfileService interface {
	mock.TestingT
	Cleanup(func())
}

// NewProfileService creates a new instance of ProfileService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProfileService(t mockConstructorTestingTNewProfileService) *ProfileService {
	mock := &ProfileService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
